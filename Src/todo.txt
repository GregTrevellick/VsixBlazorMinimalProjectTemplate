vsix screen shots
vsix upload
vsix readme
vsix notes/"how to" stand alone deploy









1) Create a "HelloWorld" sln/proj (this can/should be 4.7.1 .Net Std)



2) Create a "XxxxProjectTemplate" sln



3) Add new project > "Extensibility" > "C# Project Template" > "BlazorMinimalProjectTemplate" project (a clone of a HelloWorld project) (this can/will be a 4.7.1 CLASS library but can ultimately generate a .Net Std CONSOLE APP project for us - just depends how we populate ProjectTemplate.csproj)
This will contain an assemmblyinfo.cs file full of $projectname$ variables + ProjectTemplate.csproj file + a .vstemplate file, all at root of project
It will also contain a Class1.cs file, which we will replace with files from our HelloWorld sln/proj
Add any .cs / .css / .json / .html / etc files from our HelloWorld sln/proj
Change the namespace in any .cs files added to "namespace $safeprojectname$" & change each .cs file's Build Action to "None" (otherwise the csc tries to compile $safeprojectname$ which results in an error)
If the build still fails a clean/rebuild should fix things
To make the generated project .Net Std edit the ProjectTemplate.csproj as follows:
(a) <TargetFrameworkVersion>v$targetframeworkversion$</TargetFrameworkVersion> ==> <TargetFramework>netstandard2.0</TargetFramework>
(b) Add the attribute Sdk="Microsoft.NET.Sdk.Web" to the <Project> node (for Blazor project templates at least)
(c) We need to list all the .cs / .css / .json / .html / etc files we added to our project into our ProjectTemplate.csproj file. We can do this by copying values from BlazorMinimalProjectTemplate.csproj into ProjectTemplate.csproj (we have to do this even though .Net core project files are tiny and don't list every file explicity)
BlazorMinimalProjectTemplate.vstemplate is what ultimately generates a project, so we do need to define all the .cs / .css / .json / .html / etc files here, so that they end up on disc in the templated project.



4) Sln > Add new project > "Extensibility" > "VSIX Project" > "BlazorMinimalProjectTemplate.VsixPackage" (this can/will be 4.7.1)
Remove the index.html & stylesheet.css
Open the file source.extension.vsixmanifest > In the Assets tab, select New. In the Add New Asset window, for the Type field, select Microsoft.VisualStudio.ProjectTemplate. In the Source field, select A project in current solution. In the Project field, select BlazorMinimalProjectTemplate. Then click OK.
Add a licence file (as a link item is best)
Add png images in a \Resources folder



5) Set the BlazorMinimalProjectTemplate.VsixPackage as start up project & hit F5 - the new template should appear in the experimental instance























